/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/matrix_transform.h> 

/ {
       chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform; 
    };

     default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <5>;
        rows = <4>;
        
        // ---------------------------------------
        //          | 7     |  8   |  9  |  bscp |
        //          | 4     |  5   |  6  |  EQUAL|
        //          | 1     |  2   |  3  |  MINUs|       
        // | TO(1)  | ESC   |  0   |  .  |  ENT  |
        // ---------------------------------------

        map = < 
                    RC(0,1) RC(0,2) RC(0,3) RC(0,4)
                    RC(1,1) RC(1,2) RC(1,3) RC(1,4)
                    RC(2,1) RC(2,2) RC(2,3) RC(2,4)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4)  
        >;
    };

     kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                          &kp BSPC  &kp N7  &kp N8 &kp N9  
                          &kp EQUAL &kp N4  &kp N5 &kp N6  
                          &kp MINUS &kp N1  &kp N2 &kp N3  
                &to 1     &kp ESC  &kp DOT &mt RSHFT RET
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            bindings = <
                        &kp N1   &kp N2   &kp N3   &kp N4
                        &kp Q    &kp W    &kp E    &kp R
                        &kp A    &kp S    &kp D    &kp F
                &to 0   &kp ESC  &kp C    &kp B   &kp T
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;
        diode-direction = "col2row";
        // Define col-gpios and row-gpios here
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        default_layer {
    bindings = < ... >;
    sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>; };
        encoder_left: encoder_left {
            compatible = "alps,ec11";
            label = "LEFT_ENCODER";
            a-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            b-gpios = <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            resolution = <4>;
        };

        encoder_right: encoder_right {nav_layer {
    bindings = < ... >;
    sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;};
            compatible = "alps,ec11";
            label = "RIGHT_ENCODER";
            a-gpios = <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            b-gpios = <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
            resolution = <4>;
        };
    };
};
